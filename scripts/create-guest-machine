#!/usr/bin/env bash
# ex:ts=4:sw=4:sts=4:et
# -*- tab-width: 4; c-basic-offset: 4; indent-tabs-mode: nil -*-
#
# create-guest: Creates a (qemu) guest machine ready to test patches.
#
# Copyright (C) 2016 Intel Corporation
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 2 as
# published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
#
# Usage: Once created, the expected runqemu command is
#
#     runqemu <full path to bzImage-qemux86-64.bin> \
#             <full path to core-image-patchtest-qemux86-64.ext4> \
#             nographic kvm \
#             qemuparams="-snapshot -fsdev local,id=test_dev,path=<share folder>,security_model=mapped -device virtio-9p-pci,fsdev=test_dev,mount_tag=test_mount"
#
#     where <share folder is the one created with the create-share script


# defaults values
GUESTDIR=''
PATCHTEST=''
METAOE=''
POKY=''

function usage() {
    cat << EOF
\$ $(basename $0) OPTIONS [SERIES]

where OPTIONS are

    -g <guest dir>     : Guest directory where machine will be located
    -p <patchetst dir> : Patchtest local path repository. If not provided, a fresh clone is done from git.yoctoproject.org
    -o <meta-oe dir>   : (meta-)OpenEmbedded local path repository. If not provided, a fresh clone is done from git.yoctoproject.org
    -Y <poky dir>      : Poky local path repository. If not provided, a fresh clone is done from git.yoctoproject.org
EOF
>&2

    exit 1
}

while getopts ":g:p:o:Y:h" opt; do
    case $opt in
	g)
	    GUESTDIR=$OPTARG
	    ;;
	p)
	    PATCHTEST=$OPTARG
	    ;;
	o)
	    METAOE=$OPTARG
	    ;;
	Y)
	    POKY=$OPTARG
	    ;;
	\?)
	    echo "Invalid option: -$OPTARG" >&2
	    usage
	    ;;
	:)
	    echo "Option -$OPTARG requires an argument." >&2
	    usage
	    ;;
    esac
done
shift $((OPTIND-1))

function clone() {
    local REPOREMOTE=$1
    local REPODIR=$2
    if [ ! -d $REPODIR ]; then
	git clone $REPOREMOTE $REPODIR
    else
	( cd $REPODIR;git pull )
    fi
}

# main
if [ -z "$GUESTDIR" ]; then
    echo "Provide a guest pathname, where guest machine will be constructed"
    usage
else
    [ ! -d $GUESTDIR ]  && { mkdir $GUESTDIR; }
fi

GUESTDIR=$(readlink -e $GUESTDIR)

[ -z "$PATCHTEST" ] && { PATCHTEST="$GUESTDIR/patchtest"; }
[ -z "$METAOE" ]    && { METAOE="$GUESTDIR/meta-openembedded"; }
[ -z "$POKY" ]      && { POKY="$GUESTDIR/poky"; }

# in case folders exist, get canonical names
[ -d "$PATCHTEST" ] && { PATCHTEST=$(readlink -e $PATCHTEST); }
[ -d "$METAOE" ]    && { METAOE=$(readlink -e $METAOE); }
[ -d "$POKY" ]      && { POKY=$(readlink -e $POKY); }

clone git://git.yoctoproject.org/patchtest $PATCHTEST
clone git://git.openembedded.org/meta-openembedded $METAOE
clone git://git.yoctoproject.org/poky $POKY

cd $POKY
. oe-init-build-env

MACHINE="qemux86-64"

# remove previous patchtest config appends, if exist
PTSMARK='#PATCHTEST START'
PTEMARK='#PATCHTEST END'
sed -i -e "/$PTSMARK/,/$PTEMARK/d" $POKY/build/conf/local.conf
sed -i -e "/$PTSMARK/,/$PTEMARK/d" $POKY/build/conf/bblayers.conf

cat >> $POKY/build/conf/local.conf << EOF
$PTSMARK
MACHINE = "$MACHINE"
PACKAGE_CLASSES = "package_ipk"
IMAGE_FSTYPES = "ext4"
SSTATE_MIRRORS ?= "file://.* http://sstate.yoctoproject.org/dev/PATH"
SERIAL_CONSOLES_CHECK = "\${SERIAL_CONSOLES}"
$PTEMARK
EOF

cat >> $POKY/build/conf/bblayers.conf << EOF
$PTSMARK
BBLAYERS += "$METAOE/meta-oe"
BBLAYERS += "$METAOE/meta-python"
BBLAYERS += "$PATCHTEST/meta-patchtest"
$PTEMARK
EOF
fi

# build image
bitbake core-image-patchtest
